apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: loop-param-result-
spec:
  entrypoint: loop-param-result-example
  templates:
  - name: loop-param-result-example
    steps:
    - - name: project-A
        template: get-repos-names
      - name: project-B
        template: get-repos-names
      - name: project-C
        template: get-repos-names
    - - name: print-repos-names-A
        template: print-message
        arguments:
          parameters:
          - name: message
            value: "{{item}}"
        withParam: "{{steps.project-A.outputs.result}}"
      - name: print-repos-names-B
        template: print-message
        arguments:
          parameters:
          - name: message
            value: "{{item}}"
        withParam: "{{steps.project-B.outputs.result}}"
      - name: print-repos-names-C
        template: print-message
        arguments:
          parameters:
          - name: message
            value: "{{item}}"
        withParam: "{{steps.project-C.outputs.result}}"

  - name: get-repos-names
    script:
      image: python:3.9.1-alpine
      command: [python]
      source: |
        import json
        from urllib.request import urlopen
        repo_list = []
        with urlopen("https://api.github.com/search/repositories?q=python&page=1&per_page=10") as response:
          response_content = response.read()
          response_content.decode('utf-8')
          dict = json.loads(response_content)
          if dict:
            for item in dict['items']:
              repo_list.append(item['full_name'])
          print(json.dumps(repo_list))

  - name: print-message
    inputs:
      parameters:
      - name: message
    container:
      image: alpine:latest
      command: [sh, -c]
      args: ["echo result was: {{inputs.parameters.message}}"]
